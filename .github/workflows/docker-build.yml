name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./client
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Update docker-compose for production
      run: |
        cat > docker-compose.prod.yml << EOF
        services:
          api:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ github.sha }}
            container_name: photo-gallery-api
            restart: unless-stopped
            ports:
              - "5551:5000"
            environment:
              NODE_ENV: production
              PORT: 5000
              UPLOAD_PATH: /app/uploads
            volumes:
              - ./photos:/app/uploads/photos:ro
              - ./data:/app/data
              - api_uploads:/app/uploads
            networks:
              - photo-network

          web:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ github.sha }}
            container_name: photo-gallery-web
            restart: unless-stopped
            ports:
              - "80:80"
            depends_on:
              - api
            networks:
              - photo-network

        volumes:
          api_uploads:

        networks:
          photo-network:
            driver: bridge
        EOF

    - name: Upload production compose file
      uses: actions/upload-artifact@v4
      with:
        name: docker-compose-prod
        path: docker-compose.prod.yml
